DO $$
DECLARE
    v_p_init_date     date:= '2024-12-01 13:59:25'::date;
    v_p_final_date    date:= '2025-01-01'::date;
    v_p_start_date    date;
    v_p_end_date      date;
    v_schema          text;
    v_table           text;
    v_tab_part        text;
    v_tab_subpart     text;
    table_rec         record;
    v_tid             text;
    v_tenant          text;
    v_tarray          text:= array['1','2','24','3','4','8'];
BEGIN
    select date_trunc('month', v_p_init_date) into v_p_start_date;
    FOR table_rec IN
        select schemaname, tablename from pg_tables where
        (schemaname = 'ohie' and tablename in ('awl_event'))
    LOOP
        select v_p_init_date into v_p_start_date;
        select table_rec.schemaname into v_schema;
        select table_rec.tablename into v_table;

        -- Create DEFAULT Partition for values less than v_p_init_date
        BEGIN
            v_tab_part:= table_rec.tablename || '_' || 'default';
            EXECUTE format(
                'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                    DEFAULT',
                v_schema, v_tab_part, v_schema, v_table);
            EXECUTE format(
                'ALTER TABLE %I.%I
                    OWNER to %I',
                v_schema, v_tab_part, v_schema);
        EXCEPTION
            WHEN others THEN
                RAISE NOTICE 'Partition % already exists or another error occurred.', v_tab_part;
        END;

        -- Create MONTHLY Partitions --
        WHILE v_p_start_date <= v_p_final_date LOOP
            select table_rec.tablename || '_' || to_char(v_p_start_date, 'monyyyy') into v_tab_part;
            select (v_p_start_date + '1 month'::interval) into v_p_end_date;
            BEGIN
                EXECUTE format(
                    'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                        FOR VALUES FROM (''%I'') TO (''%I'')
                        PARTITION BY LIST (tenant_id)',
                    v_schema, v_tab_part, v_schema, v_table, v_p_start_date::text, v_p_end_date::text);
                EXECUTE format(
                    'ALTER TABLE %I.%I
                        OWNER to %I',
                    v_schema, v_tab_part, v_schema);
            EXCEPTION
                WHEN others THEN
                    RAISE NOTICE 'Partition % already exists or another error occurred.', v_tab_part;
            END;
            select (v_p_start_date + '1 month'::interval) into v_p_start_date;
            FOREACH v_tenant IN ARRAY v_tarray LOOP
                select v_tab_part || '_' || v_tenant into v_tab_subpart;
                -- Create tenant subparts
                BEGIN
                    IF v_tenant = '1' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''1'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '2' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''2'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '24' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''24'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '3' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''3'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '4' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''4'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '2304820' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''2304820'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '12' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''12'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    ELSIF v_tenant = '8' THEN
                        EXECUTE format(
                            'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                                FOR VALUES IN (''8'')',
                            v_schema, v_tab_subpart, v_schema, v_tab_part);
                    END IF;
                    EXECUTE format(
                        'ALTER TABLE %I.%I
                            OWNER to %I',
                        v_schema, v_tab_subpart, v_schema);
                EXCEPTION
                    WHEN others THEN
                        RAISE NOTICE 'Subpartition % already exists or another error occurred.', v_tab_subpart;
                END;

                -- Create DEFAULT Subpartition for values not in v_tarray
                v_tab_subpart:= v_tab_part || '_' || 'default';
                BEGIN
                    EXECUTE format(
                        'CREATE TABLE IF NOT EXISTS %I.%I PARTITION OF %I.%I
                            DEFAULT',
                        v_schema, v_tab_subpart, v_schema, v_tab_part);
                    EXECUTE format(
                        'ALTER TABLE %I.%I
                            OWNER to %I',
                        v_schema, v_tab_subpart, v_schema);
                EXCEPTION
                    WHEN others THEN
                        RAISE NOTICE 'Subpartition % already exists or another error occurred.', v_tab_subpart;
                END;
            END LOOP;
        END LOOP;
    END LOOP;
END
$$;
