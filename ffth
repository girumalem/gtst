DECLARE
  v_table_name VARCHAR2(30);
  v_column_list VARCHAR2(4000);
  v_csv_file UTL_FILE.file_type;
  v_csv_line VARCHAR2(4000);
  v_directory VARCHAR2(100) := 'EXPORT_DIR'; -- Directory object name
  v_file_path VARCHAR2(200) := '/path/to/your/export/directory/'; -- Physical directory path
  v_sql_stmt VARCHAR2(4000);
  v_cursor SYS_REFCURSOR;
  v_column_value VARCHAR2(4000);
BEGIN
  -- Enable debugging
  DBMS_DEBUG.DEBUG_ON;

  -- Loop through tables in the HR schema
  FOR rec IN (SELECT table_name FROM all_tables WHERE owner = 'HR') LOOP
    v_table_name := rec.table_name;

    -- Log the table being processed
    DBMS_OUTPUT.PUT_LINE('Processing table: ' || v_table_name);

    BEGIN
      -- Open the CSV file for writing
      v_csv_file := UTL_FILE.FOPEN(v_directory, v_table_name || '.csv', 'w', 32767);

      -- Write the column headers to the CSV file
      FOR col_rec IN (SELECT column_name
                      FROM all_tab_columns
                      WHERE table_name = v_table_name
                        AND owner = 'HR'
                      ORDER BY column_id) LOOP
        v_csv_line := v_csv_line || col_rec.column_name || ',';
      END LOOP;

      -- Remove the trailing comma
      v_csv_line := RTRIM(v_csv_line, ',');
      UTL_FILE.PUT_LINE(v_csv_file, v_csv_line);

      -- Construct the SQL query to fetch data from the table
      v_sql_stmt := 'SELECT * FROM HR.' || v_table_name;

      -- Open the cursor for the SQL query
      OPEN v_cursor FOR v_sql_stmt;

      -- Fetch and write data rows to the CSV file
      LOOP
        FETCH v_cursor INTO v_csv_line;
        EXIT WHEN v_cursor%NOTFOUND;

        -- Construct the CSV line
        v_csv_line := '';
        FOR col_rec IN (SELECT column_name
                        FROM all_tab_columns
                        WHERE table_name = v_table_name
                          AND owner = 'HR'
                        ORDER BY column_id) LOOP
          -- Fetch the column value dynamically
          EXECUTE IMMEDIATE 'SELECT TO_CHAR(:1.' || col_rec.column_name || ') FROM DUAL'
            INTO v_column_value
            USING v_cursor;

          -- Append the column value to the CSV line
          v_csv_line := v_csv_line || '"' || REPLACE(v_column_value, '"', '""') || '",';
        END LOOP;

        -- Remove the trailing comma
        v_csv_line := RTRIM(v_csv_line, ',');
        UTL_FILE.PUT_LINE(v_csv_file, v_csv_line);
      END LOOP;

      -- Close the cursor
      CLOSE v_cursor;

      -- Close the CSV file
      UTL_FILE.FCLOSE(v_csv_file);
      DBMS_OUTPUT.PUT_LINE('Exported table ' || v_table_name || ' to ' || v_table_name || '.csv');
    EXCEPTION
      WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error processing table ' || v_table_name || ': ' || SQLERRM);
        IF UTL_FILE.IS_OPEN(v_csv_file) THEN
          UTL_FILE.FCLOSE(v_csv_file);
        END IF;
        IF v_cursor%ISOPEN THEN
          CLOSE v_cursor;
        END IF;
    END;
  END LOOP
